@page
@model Calendar_Tracker.Pages.SettingsModel
@{
    ViewData["Title"] = "Settings";
}

<div class="text-center">
    <h1>@ViewData["Title"]</h1>
    <p></p>
</div>

<div class="center-container">
    <form id="myForm" method="post">
        @Html.AntiForgeryToken()

        <div  class="form-container">
            <div class="text-column">
                <p>Greeting</p>

                <p>Long Month Names</p>

                <p>Add Tracker</p>

                

            </div>

            <div class="components-column">
                <!-- Greeting -->
                <div class="components-container">
                    <input type="text" id="GreetingValue" name="GreetingValue" class="tracker-name" placeholder="Hello!" value="@Model.GreetingValue" />
                </div>

                <!-- Short/Long Month Names -->
                <div class="components-container">
                    <input id="LongMonthNames" name="LongMonthNames" type="checkbox" asp-for="LongMonthNamesValue">
                </div>



                <!-- Plus Button to Add Tracker Fields -->
                <div class="components-container">
                    <button type="button" id="addTrackerButton">+</button>
                </div>

                
            </div>
        </div>

        <div class="center-container">
            <b>Trackers</b>
        </div>

        <!--  Trackers -->
        <div>
            @if (Model.Trackers != null && Model.Trackers.Any())
            {
                for (int i = 0; i <= Model.Trackers.Keys.Max(); i++)
                {
                    if (Model.Trackers.TryGetValue(i, out var tracker))
                    {
                        <div class="components-container" id="trackerFields@(i)">
                            <input type="hidden" name="Trackers[@i].Id" class="tracker-id" value="@i" />
                            <input type="hidden" name="Trackers[@i].Order" class="tracker-order" value="@i" />
                            <input type="text" name="Trackers[@i].Name" placeholder="Tracker Name" class="tracker-name" value="@tracker.Name" />
                            <select name="Trackers[@i].Type" class="tracker-select">
                                <option value="Slider" selected="@("Slider" == tracker.Type)">Slider</option>
                                <option value="Checkbox" selected="@("Checkbox" == tracker.Type)">Checkbox</option>
                                <option value="Text" selected="@("Text" == tracker.Type)">Text</option>
                                <option value="Dropdown" selected="@("Dropdown" == tracker.Type)">Dropdown</option>
                            </select>

                            <button type="button" name="@i" class="small-btn minusTrackerButton">-</button>
                            
                            <input type="text" name="Trackers[@i].DefaultText" placeholder="Default Text" class="tracker-default-text" id="trackerText@(i)" style="display: none;" value="@tracker.DefaultText" />
                        </div>
                    }
                }
            }
            else
            {
            <p>No trackers found.</p>
            }
        </div>

        <!-- Tracker Name and Tracker Type pairs -->
        <div class="tracker-container" id="trackerNameAndType">
            <!-- This container will hold the dynamically added tracker name and type pairs -->
        </div>

        <!-- Submit button -->
        <div class="text-center">
            <button type="button" id="submitButton">Submit</button>
        </div>
    </form>
</div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    var urlSubmit = '@Url.Page("/Settings", "Submit")';

    function removeTracker(currentTrackerCount) {
        return function () {
            // Remove the corresponding tracker fields
            $("#trackerFields" + currentTrackerCount).remove();
        };
    }

    $(document).ready(function () { 
        // Handle the visibility of default text input when the page loads
        $("select[name^='Trackers[']").each(function () {
            toggleDefaultTextInputVisibility($(this));
        });

        // Handle the change event of the tracker type dropdown
        $("select[name^='Trackers[']").change(function () {
            toggleDefaultTextInputVisibility($(this));
        });

        function toggleDefaultTextInputVisibility(trackerTypeDropdown) {
            var trackerIndex = trackerTypeDropdown.attr("name").match(/\[(\d+)\]/)[1];
            var defaultTextInput = $("#trackerText" + trackerIndex);

            // Toggle visibility of the text input based on the selected type
            if (trackerTypeDropdown.val() === 'Text') {
                defaultTextInput.show();
            } else {
                defaultTextInput.hide();
            }
        }
        
        
        // Initialize trackerCount within the Razor syntax block
        let trackerCount = @((Model.Trackers != null && Model.Trackers.Any()) ? Model.Trackers.Keys.Max() : -1);

        // Handle the button click event to add tracker fields
        $(".minusTrackerButton").click(function () {
                console.log("minusTrackerButton");
                let number = $(this).attr("name");
                $("#trackerFields" + number).remove();
        });

        // Handle the button click event
        $("#submitButton").click(function () {

            // Check if GreetingValue is empty
            if ($("#GreetingValue").val() === "") {
                // Assign the placeholder value to GreetingValue
                $("#GreetingValue").val($("#GreetingValue").attr("placeholder"));
            }

            // Serialize the form data
            var formData = $("#myForm").serialize();

            console.log("Form Data: " + JSON.stringify(formData));

            // Send an AJAX request to the server
            $.ajax({
                type: "POST",
                url: urlSubmit,
                data: formData,
                success: function (data) {
                    // Handle the success response if needed
                    console.log("Form submitted successfully");
                },
                error: function (error) {
                    // Handle the error response if needed
                    console.error("Error submitting form: " + error.responseText);
                }
            });
        });

        // Handle the button click event to add tracker fields
        $("#addTrackerButton").click(function () {
            trackerCount++;

            // Create unique IDs for the new tracker fields
            var trackerId = 'trackerId' + trackerCount;
            var trackerOrder = 'trackerOrder' + trackerCount;
            var trackerNameId = 'trackerName' + trackerCount;
            var trackerTypeId = 'trackerType' + trackerCount;
            var trackerTextId = 'trackerText' + trackerCount;

            // Create new input fields for tracker id (hidden), name, and type with unique IDs
            var trackerIdInput = $('<input type="hidden" name="Trackers[' + trackerCount + '].Id" class="tracker-id" id="' + trackerId + '" value="' + trackerCount + '" />');
            var trackerOrderInput = $('<input type="hidden" name="Trackers[' + trackerCount + '].Order" class="tracker-order" id="' + trackerOrder + '" value="' + trackerCount + '" />');
            var trackerNameInput = $('<input type="text" name="Trackers[' + trackerCount + '].Name" placeholder="Tracker Name" class="tracker-name" id="' + trackerNameId + '" />');
            var trackerTypeSelect = $('<select name="Trackers[' + trackerCount + '].Type" class="tracker-select" id="' + trackerTypeId + '"></select>');

            // Add options to the dropdown (you can customize these options)
            trackerTypeSelect.append('<option value="Slider">Slider</option>');
            trackerTypeSelect.append('<option value="Checkbox">Checkbox</option>');
            trackerTypeSelect.append('<option value="Text">Text</option>');
            trackerTypeSelect.append('<option value="Dropdown">Dropdown</option>');

            var trackerMinusButton = $('<button type="button" id="minusTrackerButton" class="small-btn minusTrackerButton">-</button>');
           
            var trackerDefaultTextInput = $('<input type="text" name="Trackers[' + trackerCount + '].DefaultText" placeholder="Default Text" class="tracker-default-text" id="' + trackerTextId + '" style="display: none;" />'); // Text input for "Text" type

            // Append the new fields to the container
            $("#trackerNameAndType").append('<div class="components-container" id="trackerFields' + trackerCount + '"></div>');
            $("#trackerFields" + trackerCount).append(trackerIdInput);
            $("#trackerFields" + trackerCount).append(trackerOrderInput);
            $("#trackerFields" + trackerCount).append(trackerNameInput);
            $("#trackerFields" + trackerCount).append(trackerTypeSelect);
            $("#trackerFields" + trackerCount).append(trackerMinusButton);

            // Append the default text input
            $("#trackerFields" + trackerCount).append(trackerDefaultTextInput);


            // Attach click event handler to the minus button
            trackerMinusButton.click(removeTracker(trackerCount));

            // Attach change event handler to the tracker type dropdown
            trackerTypeSelect.change(function () {
                // Toggle visibility of the text input based on the selected type
                if ($(this).val() === 'Text') {
                    $("#" + trackerTextId).show();
                } else {
                    $("#" + trackerTextId).hide();
                }
            });
        });

        // Handle Ctrl+S keypress event
        $(document).keydown(function (e) {
            if ((e.ctrlKey || e.metaKey) && e.key === 's') {
                // Trigger the click event on the submit button
                $("#submitButton").click();
                // Prevent the default browser save behavior
                e.preventDefault();
            }
        });
    });
</script>

