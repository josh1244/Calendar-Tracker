@page
@model IndexModel
@{
    ViewData["Title"] = "Josh's Calendar Tracker";
}



<div class="text-center">
    <h1>Hello Josh!</h1>
    <b>Today is @DateTime.Now.ToString("MMM dd, yyyy")</b>
    <p></p>
</div>

<div class="center-container">
    <form id="myForm" method="post">
        @Html.AntiForgeryToken()
        <div class="form-container">
            <!--  Tracker Text -->
            <div class="text-column">
                @if (Model.Trackers != null && Model.Trackers.Any())
                {

                    for (int i = 0; i <= Model.Trackers.Keys.Max(); i++)
                    {
                        if (Model.Trackers.TryGetValue(i, out var tracker))
                        {
                                        <div>
                                            <input type="hidden" name="TrackersValues[@i].Id" class="tracker-id" value="@tracker.Id" />
                                            <p class="text-column">@tracker.Name</p>
                                        </div>
                        }
                    }
                }
                else
                {
                    <p>No trackers found.</p>
                }
            </div>

            <!--  Tracker Components -->
            <div class="components-column">
                @if (Model.Trackers != null && Model.Trackers.Any())
                {

                    for (int i = 0; i <= Model.Trackers.Keys.Max(); i++)
                    {
                        if (Model.Trackers.TryGetValue(i, out var tracker))
                        {
                            var trackerSliderValue = Model.TrackersValues.TryGetValue(i, out var trackerDataSlider) ? trackerDataSlider.SliderValue : 0;
                            var trackerCheckboxValue = Model.TrackersValues.TryGetValue(i, out var trackerDataCheckbox) ? trackerDataCheckbox.CheckboxValue : false;
                            var trackerTextValue = Model.TrackersValues.TryGetValue(i, out var trackerDataText) ? trackerDataText.TextValue : string.Empty;
                            var trackerDropdownValue = Model.TrackersValues.TryGetValue(i, out var trackerDataDropdown) ? trackerDataDropdown.DropdownValue : string.Empty;

                            @switch (tracker.Type)
                            {
                                case "Slider":
                                    <div class="components-container">
                                        <input id="@tracker.Name" name="TrackersValues[@i].SliderValue" type="range" min="0" max="10" value="@trackerSliderValue">
                                        <output style="width: 30px;" id="@tracker.Name Output">@trackerSliderValue</output>

                                    </div>
                                    break;

                                case "Checkbox":
                                    <div class="components-container">
                                        <input type="checkbox" id="@tracker.Name" name="TrackersValues[@i].CheckboxValue" checked="@(trackerCheckboxValue ?? false)" />

                                    </div>
                                    break;

                                case "Text":
                                    <div class="components-container">
                                        <input type="text" id="@tracker.Name" name="TrackersValues[@i].TextValue" placeholder="Text" class="tracker-name" value="@trackerTextValue" />
                                    
                                        
                                    </div>
                                    break;

                                case "Dropdown":
                                    <div class="components-container">
                                        <p>Dropdown not implemented yet!</p>

                                       
                                    </div>
                                    break;
                                default:
                                    <p>Tracker type undefined.</p>
                                    break;
                            }
                        }
                    }
                }
                else
                {
                    <p>No trackers found.</p>
                }
            </div>
        </div>

        <!-- Submit button -->
        <div class="text-center">
            <button type="button" id="submitButton">Submit</button>
        </div>
    </form>
</div>

<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

<script>
    var urlSubmit = '@Url.Page("/Index", "Submit")';

    $(document).ready(function () {
        // Handle the button click event
        $("#submitButton").click(function () {
            // Modify checkbox values before submitting
            $('input[type="checkbox"]').each(function () {
                if ($(this).is(':checked')) {
                    $(this).val('true');
                } else {
                    // Optionally, set a default value when the checkbox is not checked
                    $(this).val('false');
                }
            });
            
            // Serialize the form data
            var formData = $("#myForm").serialize();


            console.log("Form Data: " + JSON.stringify(formData));

            // Send an AJAX request to the server
            $.ajax({
                type: "POST",
                url: urlSubmit,
                data: formData, 
                success: function (data) {
                    // Handle the success response if needed
                    console.log("Form submitted successfully");
                },
                error: function (error) {
                    // Handle the error response if needed
                    console.error("Error submitting form: " + error.responseText);
                }
            });
        });


         // Attach input event listeners for sliders
        $("input[type='range']").on("input", function () {
            var trackerName = $(this).attr("id"); // Get the trackerName from the slider's ID
            document.getElementById(trackerName + " Output").innerHTML = $(this).val();
        });

        // Handle Ctrl+S keypress event
        $(document).keydown(function (e) {
            if ((e.ctrlKey || e.metaKey) && e.key === 's') {
                // Trigger the click event on the submit button
                $("#submitButton").click();
                // Prevent the default browser save behavior
                e.preventDefault();
            }
        });
    });
</script>


<style>
    .text-center {
        align-items: start;
        justify-content: center;
    }

    .center-container {
        display: flex;
        align-items: start;
        justify-content: center;
        margin: 0; /* Remove default margin */
    }

    .form-container {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .text-column {
        text-align: left;
        margin-right: 20px; /* Adjust margin between columns */
    }

    .components-column {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .components-container {
        width: 100%;
        margin-bottom: 15px; /* Adjust spacing between containers */
        text-align: center;
        vertical-align: middle;
    }
</style>