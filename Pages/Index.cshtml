@page
@model IndexModel
@{
    ViewData["Title"] = "Josh's Calendar Tracker";
}

<!DOCTYPE html>
<html>
<body>

<div class="text-center">
    <h1>Hello Josh!</h1>
    <b>Today is @DateTime.Now.ToString("MMM dd, yyyy")</b>
    <p></p>
</div>

<div class="center-container">
    <form method="post">
        <div class="form-container">
            <div class="text-column">
                <!-- Text content goes here -->
                <p>Day Quality: <span>@Model.SliderValue1</span></p>
                <p>Sleep Quality: <span>@Model.SliderValue2</span></p>
                <p>Took Medication: <span>@Model.CheckValue3</span></p>
            </div>

            <div class="components-column">
                <!-- DayQuality -->
                <div class="components-container">
                    <input id="DayQuality" name="DayQuality" type="range" min="0" max="10" value="@Model.SliderValue1" oninput="updateOutput(this.value, 1)">
                    <output style="width: 30px;" id="output1">@Model.SliderValue1</output>
                </div>

                <!-- SleepQuality -->
                <div class="components-container">
                    <input id="SleepQuality" name="SleepQuality" type="range" min="0" max="10" value="@Model.SliderValue2" oninput="updateOutput(this.value, 2)">
                    <output style="width: 30px;" id="output2">@Model.SliderValue2</output>
                </div>

                <!-- TookMeds -->
                <div class="components-container">
                    <input id="TookMeds" name="TookMeds" type="checkbox" @(Model.CheckValue3 ? "checked" : "") oninput="updateOutput(this.checked, 3)">
                </div>
            </div>
        </div>


        <div class="form-container">
            <!--  Tracker Text -->
            <div class="text-column">
                @if (Model.Trackers != null && Model.Trackers.Any())
                {
                
                    for (int i = 0; i <= Model.Trackers.Keys.Max(); i++)
                    {
                        if (Model.Trackers.TryGetValue(i, out var tracker))
                        {
                            <div id="trackerFields@(i)">
                                <input type="hidden" name="Trackers[@i].Id" class="tracker-id" value="@i" />
                                <input type="hidden" name="Trackers[@i].Order" class="tracker-order" value="@i" />
                                <p class="text-column">@tracker.Name: <span>@tracker.Id</span></p>
                            </div>
                        }
                    }
                }
                else
                {
                <p>No trackers found.</p>
                }
            </div>

            <!--  Tracker Components -->
            <div class="components-column">
                @if (Model.Trackers != null && Model.Trackers.Any())
                {

                    for (int i = 0; i <= Model.Trackers.Keys.Max(); i++)
                    {
                        if (Model.Trackers.TryGetValue(i, out var tracker))
                        {
                            @switch (tracker.Type)
                            {
                                case "Slider":
                                    <div class="components-container">
                                        <input id="Trackers[@i].Name" name="Trackers[@i].Name" type="range" min="0" max="10" value="@Model.SliderValue1" oninput="updateOutput(this.value, Trackers[@i].Id)">
                                        <output style="width: 30px;" id="(Trackers[@i].Name)Output">@Model.SliderValue1</output>
                                    </div>
                                    break;

                                case "Checkbox":
                                    <div class="components-container">
                                    <input id="Trackers[@i].Name" name="Trackers[@i].Name" type="checkbox" @(Model.CheckValue3 ? "checked" : "") oninput="updateOutput(this.checked, 3)">
                                    </div>
                                    break;

                                case "Text":
                                    <div class="components-container">
                                        <input type="text" name="Trackers[@i].Name" placeholder="Text" class="tracker-name" value="@tracker.Name" />
                                    </div>
                                    break;

                                case "Dropdown":
                                    <div class="components-container">
                                        <!-- Dropdown implementation here -->
                                    </div>
                                    break;
                                default:
                                    <p>Tracker type undefined.</p>
                                    break;
                            }
                        }
                    }
                }
                else
                {
                <p>No trackers found.</p>
                }
            </div>
        </div>

        <!-- Submit button -->
        <div class="text-center">
            <button type="button" id="submitButton">NewSubmit</button>
        </div>

        <p></p>

        <!-- Old Submit button -->
        <div class="text-center">
            <input type="submit" name="Submit" value="OldSubmit">
        </div>
    </form>
</div>



<script>
    var urlSubmit = '@Url.Page("/Settings", "Submit")';

    function updateOutput(Value, Number) 
    {
        document.getElementById("output" + Number).innerHTML = Value;
        console.log("output" + Number + Value);
    }
</script>


<style>
    .text-center {
        align-items: start;
        justify-content: center;
    }

    .center-container {
        display: flex;
        align-items: start;
        justify-content: center;
        margin: 0; /* Remove default margin */
    }

    .form-container {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .text-column {
        text-align: left;
        margin-right: 20px; /* Adjust margin between columns */
    }

    .components-column {
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    .components-container {
        width: 100%;
        margin-bottom: 15px; /* Adjust spacing between containers */
        text-align: center;
        vertical-align: middle;
    }
</style>


</body>
</html>